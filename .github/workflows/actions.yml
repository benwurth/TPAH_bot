# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the master branch
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build_test_deploy:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    env:
      AWS_ACCESS_KEY_ID: ${{secrets.AwsAccessKeyId}}
      AWS_SECRET_ACCESS_KEY: ${{secrets.AwsSecretAccessKey}}

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      - name: Setup .NET Core SDK
        uses: actions/setup-dotnet@v1.8.1
        with:
          # Optional SDK version to use. If not provided, will install global.json version when available. Examples: 2.2.104, 3.1, 3.1.x
          dotnet-version: 5.0.302
          
      - name: Dotnet Restore
        run: dotnet restore
      - name: Build
        run: dotnet build --configuration Release --no-restore
  
      - name: Test
        run: dotnet test --no-restore --verbosity normal
        
      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v1
        
      - name: Log into ECR
        run: aws ecr get-login-password --region us-west-2 | docker login --username AWS --password-stdin 339068795964.dkr.ecr.us-west-2.amazonaws.com

      - name: Docker Build
        run: docker build -t tpha-bot-prod .
        
#      - name: Docker Tag
#        run: docker tag tpha-bot-prod:latest 339068795964.dkr.ecr.us-west-2.amazonaws.com/tpha-bot-prod:latest
        
      - name: Lightsail Push
        run: aws lightsail push-container-image --region us-west-2 --service-name ${{secrets.ContainerServiceName}} --label tpha-bot-prod --image tpha-bot-prod:latest
